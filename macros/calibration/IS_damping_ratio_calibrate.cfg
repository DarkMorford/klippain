########################################
###### DAMPING RATIO CALIBRATIONS ######
########################################
# Written by Frix_x#0161 #
# @version: 1.0

# CHANGELOG:
#   v1.0: first version of the automatic damping ratio measurement system

# -------------------------------------------------------------------------------------------------------------------------
# If you want to use it into your own config, please install it as a standalone macro as described in the
# installation section of this file: docs > features > damping_ratio.md
# -------------------------------------------------------------------------------------------------------------------------

### What is it ? ###
# This macro helps you to configure the input shaper algorithm of Klipper by running some excitation movements to measure the damping ratio,
# generate the graphs, manage the files and so on. It's basically a fully automatic damping ratio calibration system.
# Results can be found in your config folder using FLuidd/Maisail file manager.

# The goal is to make it easy to set, share and use it.

# Usage:
#   1. Run the standard input shaper calibration to find the resonnances frequencies for your X and Y axis. Then enter the results
#      in the [input_shaper] config section. Be sure to get clean graphs before continuing!!!
#   2. Then, call the DAMPING_RATIO_CALIBRATION macro, wait for it to end and compute the graphs. Then look for the results in the results folder.


[gcode_macro DAMPING_RATIO_CALIBRATION]
description: Run the damping ratio measurement test for all axes
gcode:
    {% set x_freq = params.X_FREQ|default(printer.configfile.settings['input_shaper'].shaper_freq_x)|float %}
    {% set y_freq = params.Y_FREQ|default(printer.configfile.settings['input_shaper'].shaper_freq_y)|float %}
    {% set num_pulses = params.NUM_PULSES|default(10)|int %}
    {% set z_height = params.Z_HEIGHT|default(50)|int %}
    {% set accel_chip = params.ACCEL_CHIP|default("adxl345") %}
    {% set feedrate_travel = params.TRAVEL_SPEED|default(200)|int * 60 %}
    {% set verbose = params.VERBOSE|default(true) %}

    {% set max_x = printer.toolhead.axis_maximum.x|float %}
    {% set max_y = printer.toolhead.axis_maximum.y|float %}

    {% set accel_x = 100 * x_freq %}
    {% set accel_y = 100 * y_freq %}
    {% set period_x = 1 / x_freq %}
    {% set period_y = 1 / y_freq %}
    {% set max_v_x = accel_x * period_x / 2 %}
    {% set max_v_y = accel_y * period_y / 2 %}
    {% set distance_x = 0.5 * accel_x * (period_x / 2)**2 %}
    {% set distance_y = 0.5 * accel_y * (period_y / 2)**2 %}

    RESPOND MSG="x_freq: {x_freq}"
    RESPOND MSG="y_freq: {y_freq}"
    RESPOND MSG="accel_x: {accel_x}"
    RESPOND MSG="accel_y: {accel_y}"
    RESPOND MSG="max_v_x: {max_v_x}"
    RESPOND MSG="max_v_y: {max_v_y}"
    RESPOND MSG="distance_x: {distance_x}"
    RESPOND MSG="distance_y: {distance_y}"
    RESPOND MSG="period_x: {(period_x * 1000)|int}"
    RESPOND MSG="period_y: {(period_y * 1000)|int}"

    G90
    G1 Z{z_height} F{feedrate_travel}
    G1 X{max_x / 2} Y{max_y / 2} F10000

    # ACCELEROMETER_MEASURE CHIP={accel_chip}

    {% for _ in range(num_pulses) %}
        FORCE_MOVE STEPPER=stepper_x DISTANCE={distance_x} VELOCITY={max_v_x} ACCEL={accel_x}
        G4 P{(period_x * 1000)|int}
        FORCE_MOVE STEPPER=stepper_x DISTANCE={-distance_x} VELOCITY={max_v_x} ACCEL={accel_x}
        G4 P{(period_x * 1000)|int}
    {% endfor %}

    {% for _ in range(num_pulses) %}
        FORCE_MOVE STEPPER=stepper_y DISTANCE={distance_y} VELOCITY={max_v_y} ACCEL={accel_y}
        G4 P{(period_y * 1000)|int}
        FORCE_MOVE STEPPER=stepper_y DISTANCE={-distance_y} VELOCITY={max_v_y} ACCEL={accel_y}
        G4 P{(period_y * 1000)|int}
    {% endfor %}

    # ACCELEROMETER_MEASURE CHIP={accel_chip} NAME=damping_calibration
